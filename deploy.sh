#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ Yandex Managed Kubernetes
# –û–±—Ä–∞–∑ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Container Registry

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

warn() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥ —Å–≤–æ–π –ø—Ä–æ–µ–∫—Ç)
REGISTRY_NAME="hw06-cr-demo"
IMAGE_NAME="hw06-app"
IMAGE_TAG="${1:-1.0}"
FULL_IMAGE_NAME="${REGISTRY_NAME}.cr.yandex/${IMAGE_NAME}:${IMAGE_TAG}"

log "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ Kubernetes"
log "Registry: $REGISTRY_NAME"
log "Image: $IMAGE_NAME:$IMAGE_TAG"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ deployment —Ñ–∞–π–ª–∞
log "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã..."
if [[ ! -f "deployment.yaml" ]]; then
    error "–§–∞–π–ª deployment.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—Ä–∞–∑ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ registry
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–∑–∞ –≤ Container Registry..."
if ! yc container image list --registry-name=$REGISTRY_NAME --format=json | jq -e ".[] | select(.tags[] == \"$IMAGE_TAG\")" > /dev/null; then
    error "‚ùå –û–±—Ä–∞–∑ $FULL_IMAGE_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ registry!"
    error "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±—Ä–∞–∑ –≤ registry –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º"
    exit 1
else
    log "‚úÖ –û–±—Ä–∞–∑ $FULL_IMAGE_NAME –Ω–∞–π–¥–µ–Ω –≤ registry"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–ª–∞—Å—Ç–µ—Ä—É
log "‚ò∏Ô∏è  –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Kubernetes –∫–ª–∞—Å—Ç–µ—Ä—É..."
if ! kubectl cluster-info > /dev/null 2>&1; then
    warn "‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–ª–∞—Å—Ç–µ—Ä—É!"
    log "–ü–æ–ª—É—á–∞–µ–º kubeconfig..."
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å kubeconfig –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    CLUSTER_NAME=$(yc managed-kubernetes cluster list --format json | jq -r '.[0].name // empty')
    
    if [[ -n "$CLUSTER_NAME" ]]; then
        log "–ù–∞–π–¥–µ–Ω –∫–ª–∞—Å—Ç–µ—Ä: $CLUSTER_NAME"
        yc managed-kubernetes cluster get-credentials $CLUSTER_NAME --external --force
    else
        error "–ö–ª–∞—Å—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Ç–µ—Ä –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç–µ kubeconfig –≤—Ä—É—á–Ω—É—é:"
        error "yc managed-kubernetes cluster get-credentials <CLUSTER_NAME> --external --force"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–∑–ª—ã –∫–ª–∞—Å—Ç–µ—Ä–∞
log "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∞—Å—Ç–µ—Ä–∞..."
kubectl get nodes -o wide

# –û–±–Ω–æ–≤–ª—è–µ–º deployment.yaml —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º –æ–±—Ä–∞–∑–∞
log "üìù –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é deployment..."
sed -i.bak "s|hw06-cr-demo.cr.yandex/hw06-app:.*|$FULL_IMAGE_NAME|g" deployment.yaml

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã
log "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Kubernetes..."
kubectl apply -f deployment.yaml

if [[ $? -eq 0 ]]; then
    log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ"
else
    error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏"
    exit 1
fi

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥–æ–≤
log "‚è≥ –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥–æ–≤..."
kubectl wait --for=condition=ready pod -l app=hw06-app --timeout=300s

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
log "üìã –°—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:"
kubectl get deployments,pods,services -l app=hw06-app

# –ü–æ–ª—É—á–∞–µ–º –≤–Ω–µ—à–Ω–∏–π IP LoadBalancer'–∞
log "üåê –ü–æ–ª—É—á–∞–µ–º –≤–Ω–µ—à–Ω–∏–π IP —Å–µ—Ä–≤–∏—Å–∞..."
EXTERNAL_IP=""
COUNTER=0
MAX_ATTEMPTS=60

while [[ -z "$EXTERNAL_IP" && $COUNTER -lt $MAX_ATTEMPTS ]]; do
    echo -n "."
    EXTERNAL_IP=$(kubectl get svc hw06-app-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null)
    if [[ -z "$EXTERNAL_IP" ]]; then
        sleep 5
        ((COUNTER++))
    fi
done
echo ""

if [[ -n "$EXTERNAL_IP" ]]; then
    log "üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://$EXTERNAL_IP"
    log "üè• Health check: http://$EXTERNAL_IP/health"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    log "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
    echo ""
    echo "=== –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ==="
    curl -s "http://$EXTERNAL_IP" || warn "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç"
    echo ""
    echo "=== Health check ==="
    curl -s "http://$EXTERNAL_IP/health" || warn "Health check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo ""
    
else
    warn "‚ö†Ô∏è  –í–Ω–µ—à–Ω–∏–π IP –µ—â–µ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∑–∂–µ:"
    warn "kubectl get svc hw06-app-service"
fi

# –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
log "üìä –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
echo ""
echo "# –°—Ç–∞—Ç—É—Å –ø–æ–¥–æ–≤:"
echo "kubectl get pods -l app=hw06-app"
echo ""
echo "# –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
echo "kubectl logs -f deployment/hw06-app"
echo ""
echo "# –û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞:"
echo "kubectl describe svc hw06-app-service"
echo ""
echo "# –£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:"
echo "kubectl delete -f deployment.yaml"
echo ""

log "‚ú® –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"